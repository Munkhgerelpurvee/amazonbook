const CategoryModel = require("../models/categories.model")
// –ë“Ø—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π–≥ –≥–∞—Ä–≥–∞–∂ ”©–≥–¥”©–≥ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä —Ñ—É–Ω–∫—Ü –º”©–Ω –±–∏–¥ –±“Ø—Ö —Ñ—É–Ω–∫—Ü—ç—ç middleware —Ö—ç–ª–±—ç—Ä—ç—ç—Ä –±–∏—á–Ω—ç. middleware function –Ω—å requist, response, next –≥—ç—Å—ç–Ω 3 parameters —Ö“Ø–ª—ç—ç–Ω –∞–≤–¥–∞–≥.  middleware –±–æ–ª –≥—É—Ä–≤–∞–Ω –∞—Ä–≥—É–º–µ–Ω—Ç—Ç–∞–π —ç–Ω–≥–∏–π–Ω —Ñ—É–Ω–∫—Ü —é–º.

exports.getCategories = async (req, res, next) => {
    try{
        const allCategories = await CategoryModel.find();
        res.status(200).json({
            success:true,
            data:allCategories,
           
        })
    } catch(err) {

        res.status(400).send( {
            success:false,
                error:err,

        });

    }

};

exports.getCategory = async (req, res, next) => {
    try{
        const oneCategory = await CategoryModel.findById(req.params.id);
// if else –≥—ç—Ö–≥“Ø–π–≥—ç—ç—Ä –∏–ª“Ø“Ø —Ç–æ–≤—á—Ö–æ–Ω –±—É—é—É –≥–∞–Ω—Ü —à–∞–ª–≥–∞–ª—Ç—Ç–∞–π –±–æ–ª–≥–æ—Ö –±–æ–ª–æ–º–∂ –±–∞–π–Ω–∞.

/*
if(!oneCategory) —Ö—ç—Ä–≤—ç—ç –∫–∞—Ç–µ–≥–æ—Ä–∏ –º–∞–∞–Ω—å null –±–∞–π—Ö —é–º –±–æ–ª !oneCategory--true –±–æ–ª–∂ —Ö—É–≤–∏—Ä–Ω–∞. ”®–• –∫–∞—Ç–µ–≥–æ—Ä–∏ –±–∞–π—Ö–≥“Ø–π —Ç–æ—Ö–∏–æ–ª–¥–æ–ª–¥ —ç–Ω—ç —Ö—ç—Å—ç–≥ –∞–∂–∏–ª–ª–∞–Ω–∞. id-—Ç–∞–π –∫–∞—Ç–µ–≥–æ—Ä–∏ –ê–õ–ì–ê –±–∞–π–≥–∞–∞ —Ç–æ—Ö–∏–æ–ª–¥–æ–ª–¥ –±–∞–π—Ö–≥“Ø–π –≥—ç–∂ —Ö—ç–ª—ç—ç–¥ —ç–Ω—ç —Ñ—É–Ω–∫—Ü–∏–π–Ω “Ø–π–ª –∞–∂–∏–ª–ª–∞–≥–∞–∞–≥ –¥—É—É—Å–≥–∞—Ö —Ö—ç—Ä—ç–≥—Ç—ç–π. “Æ“Ø–Ω–∏–π —Ç—É–ª–¥ return —Ç–∞–≤—å–∂ ”©–≥–Ω”©. 


null –±–æ–ª “Ø–Ω—ç–Ω–∏–π —à–∞–ª–≥—É—É—Ä (truthy/falsy) –¥—ç—ç—Ä "—Ö—É–¥–∞–ª" (false) –≥—ç–∂ —Ç–æ–æ—Ü–æ–≥–¥–¥–æ–≥.
üîπ ! (–Ω–æ—Ç (negation)) –æ–ø–µ—Ä–∞—Ç–æ—Ä –Ω—å —Ç—É—Ö–∞–π–Ω —É—Ç–≥—ã–Ω —ç—Å—Ä—ç–≥ (inverse) —É—Ç–≥—ã–≥ –≥–∞—Ä–≥–∞–¥–∞–≥.
üîπ null –Ω—å false –≥—ç–∂ —Ç–æ–æ—Ü–æ–≥–¥–æ—Ö —Ç—É–ª, !null –Ω—å true –±–æ–ª–Ω–æ.
null –Ω—å "falsy" (—Ö—É–¥–∞–ª) —É—Ç–≥–∞ —Ç—É–ª
!null –Ω—å “Ø“Ø–Ω–∏–π —ç—Å—Ä—ç–≥ —É—Ç–≥–∞ –±—É—é—É "true" –±–æ–ª–Ω–æ.

6. –î“Ø–≥–Ω—ç–ª—Ç
null –Ω—å "falsy" —Ç—É–ª !null –Ω—å true –±–æ–ª–Ω–æ.
if (!oneCategory) –Ω—å oneCategory –±–∞–π—Ö–≥“Ø–π (null —ç—Å–≤—ç–ª undefined) “Ø–µ–¥ –∞–∂–∏–ª–ª–∞–Ω–∞.
–≠–Ω—ç –Ω—å –∫–∞—Ç–µ–≥–æ—Ä–∏ –æ–ª–¥–æ—Ö–≥“Ø–π –±–æ–ª 400 –∞–ª–¥–∞–∞ –±—É—Ü–∞–∞—Ö –º–µ—Ö–∞–Ω–∏–∑–º—ã–≥ —Ö–∞–Ω–≥–∞–∂ –±–∞–π–Ω–∞.
–¢–æ–≤—á—Ö–æ–Ω–¥–æ–æ: if (!oneCategory) —à–∞–ª–≥–∞–ª—Ç –Ω—å –∫–∞—Ç–µ–≥–æ—Ä–∏ –±–∞–π—Ö–≥“Ø–π “Ø–µ–¥ (null –±–æ–ª) "“Ø–Ω—ç–Ω" –±–æ–ª–Ω–æ –≥—ç—Å—ç–Ω —É—Ç–≥–∞—Ç–∞–π. üöÄ

*/

        if(!oneCategory) {
           return res.status(400).send({
                success:false,
                error: req.params.id + "id-—Ç–∞–π –∫–∞—Ç–µ–≥–æ—Ä–∏ –ê–õ–ì–ê –±–∞–π–Ω–∞.",
                
            });
            
        };
        res.status(200).send({
            success:true,
            data:oneCategory
        })
        
    } catch(err) {
        res.status(400).send({
            success:false,
            error:err

        });

    }
};


exports.createCategory = async  (req, res, next) => {
    console.log("DATA requist.body: ", req.body);
    // database-–¥ “Ø“Ø—Å—Å—ç–Ω –∫–∞—Ç–µ–≥–æ—Ä–∏ categotyAtlas---–¥ –æ—Ä–æ–æ–¥ –∏—Ä–Ω—ç. 
    try {

        const categoryAtlas = await CategoryModel.create(req.body);
             res.status(200).json({
                 success:true,
                 data:categoryAtlas
             });

    } catch(err) {
        res.status(400).send(
            {
                success:false,
                error:err,
            }
        )

    }
};

exports.updateCategory = (req, res, next) => {
    res.status(200).json({
        success:true,
        data:`–ò–π–º ${req.params.id} ID-—Ç–∞–π –∫–∞—Ç–µ–≥–æ—Ä–∏–π–≥ ”©”©—Ä—á–∏–ª–Ω”©...`
    })
};

exports.deleteCategory = (req, res, next) => {
    res.status(200).send({
        success:true,
        data:`${req.params.id} ID-—Ç–∞–π –∫–∞—Ç–µ–≥–æ—Ä–∏–π–≥ —É—Å—Ç–≥–∞–Ω–∞...`
    })
}
